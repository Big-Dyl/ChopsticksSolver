(()=>{"use strict";class t{constructor(t,s){this.status=[[1,1],[1,1]],this.hashTable=new Map,this.doleftovers=!0,this.getBestMove=(t,s,a,e)=>{if(t){let t=this.getMoves(0),h=-1/0,i=0;for(let u=0;u<t.length;u++){let l=[[this.status[0][0],this.status[0][1]],[this.status[1][0],this.status[1][1]]];this.playMove(t[u]);let o=this.solveBoard(!1,s-1,a,e);if(this.status=[[l[0][0],l[0][1]],[l[1][0],l[1][1]]],o>h&&(h=o,i=t[u]),e<=(a=Math.max(a,h)))break}return i}{let t=this.getMoves(1),h=1/0,i=0;for(let u=0;u<t.length;u++){let l=[[this.status[0][0],this.status[0][1]],[this.status[1][0],this.status[1][1]]];this.playMove(t[u]);let o=this.solveBoard(!0,s-1,a,e);if(this.status=[[l[0][0],l[0][1]],[l[1][0],l[1][1]]],o<h&&(h=o,i=t[u]),(e=Math.min(e,h))<=a)break}return i}},this.solveBoard=(t,s,a,e)=>{if(this.hashTable.has([this.status,t]))return this.hashTable.get([this.status,t]);if(s<=0)return 0;if(t){if(0==this.status[1][0]&&0==this.status[1][1])return s;if(0==this.status[0][0]&&0==this.status[0][1])return-s;let i=this.getMoves(0),u=-1/0;for(let t=0;t<i.length;t++){let l=[[this.status[0][0],this.status[0][1]],[this.status[1][0],this.status[1][1]]];try{this.playMove(i[t])}catch(h){console.log(this.status),console.log(i[t]),console.error(h)}let o=this.solveBoard(!1,s-1,a,e);if(this.status=[[l[0][0],l[0][1]],[l[1][0],l[1][1]]],o>u&&(u=o),e<=(a=Math.max(a,u)))break}return this.hashTable.set(parseInt(`${this.status[0][0]}${this.status[0][1]}${this.status[1][0]}${this.status[1][1]}${t?1:0}`,2),u),u}{if(0==this.status[0][0]&&0==this.status[0][1])return-s;if(0==this.status[1][0]&&0==this.status[1][1])return s;let i=this.getMoves(1),u=1/0;for(let t=0;t<i.length;t++){let l=[[this.status[0][0],this.status[0][1]],[this.status[1][0],this.status[1][1]]];try{this.playMove(i[t])}catch(h){console.log(this.status),console.log(i[t]),console.error(h)}let o=this.solveBoard(!0,s-1,a,e);if(this.status=[[l[0][0],l[0][1]],[l[1][0],l[1][1]]],o<u&&(u=o),(e=Math.min(e,u))<=a)break}return this.hashTable.set(parseInt(`${this.status[0][0]}${this.status[0][1]}${this.status[1][0]}${this.status[1][1]}${t?1:0}`,2),u),u}},this.playMove=t=>{let s=[(16&t)>>4,(8&t)>>3],a=[(4&t)>>2,(2&t)>>1],e=1&t,h=this.status[s[0]][s[1]],i=this.status[a[0]][a[1]];if(this.status[s[0]]==this.status[a[0]]){let t=[],u=h+i;for(let s=0;s<=u-s;s++)s!=Math.min(h,i)&&u-s<5&&t.push([u-s,s]);this.status[s[0]][s[1]]=t[e][1],this.status[a[0]][a[1]]=t[e][0]}else this.doleftovers?this.status[a[0]][a[1]]=i+h<=4?i+h:i+h-5:this.status[a[0]][a[1]]=i+h<=4?i+h:0},this.getMoves=t=>{let s=[];for(let h=0;h<2;h++)if(0!=this.status[t][h])for(let a=0;a<2;a++)0!=this.status[1^t][a]&&s.push(parseInt(`${t}${h}${1^t}${a}0`,2));let a=0,e=this.status[t][0]+this.status[t][1];for(let h=0;h<=e-h;h++)h!=Math.min(this.status[t][0],this.status[t][1])&&e-h<5&&a++;for(let h=0;h<a;h++){let a=parseInt(`${t}0${t}1${h}`,2);s.includes(a)||s.push(a)}return s},this.status=[[t[0],t[1]],[t[2],t[3]]],this.doleftovers=s}}onmessage=s=>{let a=new t(s.data[0],s.data[3]).solveBoard(s.data[1],s.data[2],-1/0,1/0);postMessage(a)}})();
//# sourceMappingURL=446.9c84a4b0.chunk.js.map